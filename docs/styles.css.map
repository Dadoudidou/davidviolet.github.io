{"version":3,"sources":["./styles.scss","./mixins/mixins.scss"],"names":[],"mappings":"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","file":"styles.css","sourcesContent":["@import \"./variables.scss\";\n@import \"./mixins/mixins.scss\";\n\n:root {\n    --primary-color: #{$primary-color};\n    --secondary-color: #{$secondary-color};\n    --text-color: #{$text-color};\n    --text-contrast: #{$text-contrast};\n    --surface-background: #{$surface-background};\n}\n\nhtml, body {\n    background-color: #ffffff;\n    margin: 0;\n    padding: 0;\n\n    font-size: 16px;\n    line-height: 1.5em;\n    color: var(--text-color);\n    @include typography-roboto;\n    scroll-behavior: smooth;\n    //scroll-snap-type: y proximity;\n    @include xs {\n        background-color: hsl(0deg 0% 96%);\n    }\n}\n\n// utils\n.d-flex { display: flex; }\n.d-none { display: none; }\n.flex-row { flex-direction: row; }\n.flex-column { flex-direction: column; }\n.flex-auto { flex: 1 1 auto; }\n.align-items-center { align-items: center; }\n.text-align-right { text-align: right; }\n.text-align-center { text-align: center; }\n.white-space-nowrap { white-space: nowrap; }\n.width-full { width: 100%; }\n.height-full { height: 100%; }\n\n.d-grid { display: grid; }\n.grid-two-columns { \n    grid-template-columns: repeat(2, 1fr); \n    column-gap: 2rem;\n    @include sm { column-gap: 1rem; }\n    @include xs { \n        display: block;\n    }\n}\n.grid-three-columns { \n    grid-template-columns: repeat(3, 1fr); \n    column-gap: 2rem;\n    row-gap: 2rem;\n    @include sm { column-gap: 1rem; }\n    @include xs { \n        display: block;\n    }\n}\n.grid-column-reverse {\n    grid-auto-flow: dense;\n    > div:first-child {\n        grid-column: 2;\n    }\n}\n\n.d-xs-flex {\n    display: none !important;\n    @include xs {\n        display: flex !important;\n        align-items: center;\n    }\n}\n.d-xs-none {\n    @include xs {\n        display: none !important;\n    }\n}\n\n// margin and padding\n.ml-auto { margin-left: auto ; }\n.mr-auto { margin-right: auto ; }\n.mh-auto { margin-left: auto ; margin-right: auto ; }\n@for $i from 0 through 8 {\n    .m-#{$i} { margin: $i*0.5rem ; } \n    .mt-#{$i} { margin-top: $i*0.5rem ; } \n    .mr-#{$i} { margin-right: $i*0.5rem ; } \n    .mb-#{$i} { margin-bottom: $i*0.5rem ; } \n    .ml-#{$i} { margin-left: $i*0.5rem ; } \n    .mh-#{$i} { margin-left: $i*0.5rem ; margin-right: $i*0.5rem ; } \n    .mv-#{$i} { margin-top: $i*0.5rem ; margin-bottom: $i*0.5rem ; } \n}\n.pl-auto { padding-left: auto ; }\n.pr-auto { padding-right: auto ; }\n.ph-auto { padding-left: auto ; padding-right: auto ; }\n@for $i from 0 through 8 {\n    .p-#{$i} { padding: $i*0.5rem ; } \n    .pt-#{$i} { padding-top: $i*0.5rem ; } \n    .pr-#{$i} { padding-right: $i*0.5rem ; } \n    .pb-#{$i} { padding-bottom: $i*0.5rem ; } \n    .pl-#{$i} { padding-left: $i*0.5rem ; } \n    .ph-#{$i} { padding-left: $i*0.5rem ; padding-right: $i*0.5rem ; } \n    .pv-#{$i} { padding-top: $i*0.5rem ; padding-bottom: $i*0.5rem ; } \n}\n\n// aspect ratio\n[style*=\"--aspect-ratio\"] > :first-child {\n    width: 100%;\n}\n[style*=\"--aspect-ratio\"] > img {  \n    height: auto;\n} \n@supports (--custom:property) {\n    [style*=\"--aspect-ratio\"] {\n        position: relative;\n    }\n    [style*=\"--aspect-ratio\"]::before {\n        content: \"\";\n        display: block;\n        padding-bottom: calc(100% / (var(--aspect-ratio)));\n    }  \n    [style*=\"--aspect-ratio\"] > :first-child {\n        position: absolute;\n        top: 0;\n        left: 0;\n        height: 100%;\n    }  \n}\n\n// typography\na {\n    color: var(--text-color);\n    text-decoration: none;\n    &:hover {\n        color: var(--text-color);\n        text-decoration: none;\n    }\n    &:visited {\n        color: var(--text-color);\n        text-decoration: none;\n    }\n}\nh1 {\n    font-size: 2rem;\n    line-height: 2.5rem;\n    @include typography-cookie;\n    color: var(--primary-color);\n    margin: 0;\n    @include typography-normal;\n}\nh2 {\n    font-size: 2rem;\n    line-height: 2.5rem;\n    @include typography-normal;\n    margin-top: 0;\n    margin-bottom: 1rem;\n    @include typography-normal;\n}\n.subtitle {\n    font-size: 1.5rem;\n    line-height: 2rem;\n    margin-top: 0;\n    margin-bottom: 0;\n}\n.body1 {\n    font-size: 3rem;\n    line-height: 2.5rem;\n    @include typography-cookie;\n}\n\n// regions\n.container {\n    max-width: 1024px;\n    margin-left: auto;\n    margin-right: auto;\n    padding-left: 1rem;\n    padding-right: 1rem;\n}\nsection {\n    min-height: 40rem;\n    scroll-snap-align: start;\n    \n    z-index: 0;\n    @include xs {\n        min-height: auto;\n        margin-bottom: 5rem;\n        padding-top: 2rem;\n        padding-bottom: 2rem;\n    }\n}\n.app-container {\n    position: relative;\n    min-height: 100vh;\n    .content-wrap {\n        padding-bottom: 8rem;\n    }\n    app-footer {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        right: 0;\n    }\n}","@import \"./../variables.scss\";\n\n// TYPOGRAPHY\n@mixin typography-thin { font-weight: 100; }\n@mixin typography-extra-light { font-weight: 200; }\n@mixin typography-light { font-weight: 300; }\n@mixin typography-normal { font-weight: 400; }\n@mixin typography-medium { font-weight: 500; }\n@mixin typography-semi-bold { font-weight: 600; }\n@mixin typography-bold { font-weight: 700; }\n@mixin typography-extra-bold { font-weight: 800; }\n@mixin typography-black { font-weight: 900; }\n\n@mixin typography-roboto { font-family: 'roboto', sans-serif; }\n@mixin typography-cookie { font-family: 'cookie', cursive; }\n\n// RESPONSIVE\n@mixin xs {\n    $mq: map-get($map: $breakpoints, $key: \"xs\");\n    @media (min-width: #{map-get($mq, \"min\")}) and (max-width: #{map-get($mq, \"max\")})\n    {\n        @content;\n    }\n}\n@mixin sm {\n    $mq: map-get($map: $breakpoints, $key: \"sm\");\n    @media (min-width: #{map-get($mq, \"min\")}) and (max-width: #{map-get($mq, \"max\")})\n    {\n        @content;\n    }\n}\n@mixin md {\n    $mq: map-get($map: $breakpoints, $key: \"md\");\n    @media (min-width: #{map-get($mq, \"min\")}) and (max-width: #{map-get($mq, \"max\")})\n    {\n        @content;\n    }\n}\n@mixin xl {\n    $mq: map-get($map: $breakpoints, $key: \"xl\");\n    @media (min-width: #{map-get($mq, \"min\")}) and (max-width: #{map-get($mq, \"max\")})\n    {\n        @content;\n    }\n}"],"sourceRoot":"webpack:///"}